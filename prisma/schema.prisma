generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            Int                @id @default(autoincrement())
  name          String?
  email         String?            @unique
  emailVerified DateTime?
  avatar        String?
  role          UserPermissionRole @default(USER)
  plan          UserPlan           @default(FREE)
  bio           String?
  locale        String?
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  accounts      Account[]
  sessions      Session[]
  listings      Listing[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Place {
  id          Int        @id @default(autoincrement())
  name        String
  slug        String     @unique
  brderCoords Json
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  centerId    Int        @unique
  bounds      Json
  center      Coordinate @relation(fields: [centerId], references: [id])
  listing     Listing[]
}

model Coordinate {
  id        Int       @id @default(autoincrement())
  latitude  Float
  longitude Float
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  place     Place?
  listing   Listing[]
}

model Listing {
  id          Int        @id @default(autoincrement())
  name        String
  slug        String     @unique
  description String
  price       Int
  currency    String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  placeId     Int
  userId      Int
  locationId  Int
  place       Place      @relation(fields: [placeId], references: [id])
  location    Coordinate @relation(fields: [locationId], references: [id])
  user        User       @relation(fields: [userId], references: [id])
}

enum UserPermissionRole {
  USER
  ADMIN
}

enum UserPlan {
  FREE
  TRIAL
  PRO
}
